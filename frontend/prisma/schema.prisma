generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id       String   @id @default(uuid())
  name     String
  email    String   @unique
  password String
  role     Role     
  rooms    Room[]   @relation("UserRooms") // Teachers can create multiple rooms
  players  Player[] @relation("UserPlayers") // Students can join multiple rooms as players
}

model Player {
  id     String @id @default(uuid())
  name   String 
  points Int
  role   Role   @default(STUDENT) // Players are typically students
  roomId String
  room   Room   @relation(fields: [roomId], references: [id])
  userId String // Reference to the User who is a player
  user   User   @relation("UserPlayers", fields: [userId], references: [id])
  hasCompleted Boolean @default(false)
}

model Room {
  id              String     @id @default(uuid())
  roomName        String     @unique
  quizTitle       String
  quizDescription String?
  quizDuration    Int
  players         Player[]
  questions       Question[]
  userId          String     // Link to the user (teacher) who created the room
  user            User       @relation("UserRooms", fields: [userId], references: [id])
  createdAt       DateTime   @default(now())
}

model Question {
  id           String   @id @default(uuid())
  questionText String
  roomId       String
  room         Room     @relation(fields: [roomId], references: [id])
  answers      Answer[]
}

model Answer {
  id         String   @id @default(uuid())
  answerText String
  isCorrect  Boolean
  questionId String
  question   Question @relation(fields: [questionId], references: [id])
}

enum Role {
  TEACHER
  STUDENT
}
